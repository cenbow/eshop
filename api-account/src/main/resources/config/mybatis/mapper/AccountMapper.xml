<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnfs.api.account.mapper.AccountMapper">
	<select id="get" parameterType="long" resultType="Account">
		select * from t_account where id = #{id}
	</select>
	
	<select id="getAccountByName" parameterType="String" resultType="Account">
		select * from t_account where name = #{accountName}
	</select>

	<select id="getAll" resultType="Account">
		select * from t_account;
	</select>

	<select id="count" resultType="int">
		select count(*) from t_account
	</select>

	<insert id="create" parameterType="Account">
		insert into t_account (name,password,salt,type,enable,deleted,locked) values (#{name},#{password},#{salt},#{type},#{enable},#{deleted},#{locked})
	</insert>

	<update id="update" parameterType="Account">
		update t_account set name =
		#{name}, password = #{password}, salt=#{salt}, type=#{type}, enable =
		#{enable}, deleted=#{deleted}, locked =#{locked}
		where id = #{id}
	</update>

	<delete id="delete" parameterType="long">
		delete from t_account where id = #{id}
	</delete>
	
	<!-- account - role  -->
	<resultMap type="Account" id="accountResultMap">
		<id column="id" property="id"/>
		<result column="accountId" property="accountId"/>
		<result column="type" property="type"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="deleted" property="deleted"/>
		<result column="locked" property="locked"/> 
		<result column="enable" property="enable"/>
		<collection property="roles" ofType="Role">
			<id column="id"  property="id"/>
			<result column="name" property="name"/>
			<result column="type" property="type"/>
		</collection>
		<collection property="groups" ofType="Group">
			<id column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="type" property="type"/>
			<collection property="roles" ofType="Role">
				<id column="id" property="id"/>
				<result column="name" property="name"/>
				<result column="type" property="type"/>
			</collection>
		</collection>
	</resultMap>
	
	
</mapper>